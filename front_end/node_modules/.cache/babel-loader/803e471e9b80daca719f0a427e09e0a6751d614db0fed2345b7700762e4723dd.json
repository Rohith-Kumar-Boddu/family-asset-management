{"ast":null,"code":"var _jsxFileName = \"/Users/rohithkumarboddu/Documents/Fall 2022/Cloud Computing/family-asset-management/front_end/src/components/UserStatsAllChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ApexReactCharts from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserStatsAllChart() {\n  _s();\n  const [stats, setStats] = useState([]);\n  const [families, setFamillies] = useState(0);\n  const [trials, setTrials] = useState(0);\n  const [properties, setProperties] = useState(0);\n  const [projects, setProjects] = useState(0);\n  const [members, setMembers] = useState(0);\n  useEffect(() => {\n    let mount = true;\n    let account = localStorage.getItem('account');\n    if (localStorage.getItem('account')) {\n      account = JSON.parse(localStorage.getItem('account'));\n    } else {\n      account = false;\n    }\n    const displayStats = () => {\n      axios({\n        method: 'GET',\n        url: process.env.REACT_APP_BACKEND_URL_LARAVEL + 'userallstats/' + account['id'],\n        headers: {\n          'content-type': 'application/json'\n        }\n      }).then(result => {\n        if (mount) {\n          if (result.data.success) {\n            setStats(result.data.response);\n            setTrials(result.data.response[0].trials);\n            setFamillies(result.data.response[0].families);\n            setProjects(result.data.response[0].projects);\n            setProperties(result.data.response[0].properties);\n            setMembers(result.data.response[0].members);\n          } else {\n            setStats([]);\n          }\n        }\n      }).catch(err => {\n        setStats([]);\n      });\n    };\n    displayStats();\n    return () => {\n      mount = false;\n    };\n  }, [stats]);\n  const series = [trials, members, families, properties, projects];\n  const options = {\n    chart: {\n      id: \"yearly-bar\",\n      height: 250,\n      width: '100%'\n    },\n    labels: ['Trials', 'Members', 'Families', 'Properties', 'Projects'],\n    theme: {\n      monochrome: {\n        enabled: true\n      }\n    },\n    plotOptions: {\n      pie: {\n        dataLabels: {\n          offset: -5\n        }\n      }\n    },\n    dataLabels: {\n      formatter(val, opts) {\n        const name = opts.w.globals.labels[opts.seriesIndex];\n        return [name, val.toFixed(1) + '%'];\n      }\n    },\n    stroke: {\n      curve: 'straight'\n    },\n    title: {\n      text: 'Summary Stats',\n      align: 'center'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: /*#__PURE__*/_jsxDEV(ApexReactCharts, {\n      options: options,\n      series: series,\n      type: \"pie\",\n      height: 250\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(UserStatsAllChart, \"qYg0sCw2c+y9mBhwPwwjZBrBf3U=\");\n_c = UserStatsAllChart;\nexport default UserStatsAllChart;\nvar _c;\n$RefreshReg$(_c, \"UserStatsAllChart\");","map":{"version":3,"names":["React","useState","useEffect","axios","ApexReactCharts","UserStatsAllChart","stats","setStats","families","setFamillies","trials","setTrials","properties","setProperties","projects","setProjects","members","setMembers","mount","account","localStorage","getItem","JSON","parse","displayStats","method","url","process","env","REACT_APP_BACKEND_URL_LARAVEL","headers","then","result","data","success","response","catch","err","series","options","chart","id","height","width","labels","theme","monochrome","enabled","plotOptions","pie","dataLabels","offset","formatter","val","opts","name","w","globals","seriesIndex","toFixed","stroke","curve","title","text","align"],"sources":["/Users/rohithkumarboddu/Documents/Fall 2022/Cloud Computing/family-asset-management/front_end/src/components/UserStatsAllChart.js"],"sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport ApexReactCharts from 'react-apexcharts'\r\n\r\nfunction UserStatsAllChart() {\r\n  const [stats,setStats]=useState([]);\r\n  const [families,setFamillies]=useState(0);\r\n  const [trials,setTrials]=useState(0);\r\n  const [properties,setProperties]=useState(0);\r\n  const [projects,setProjects]=useState(0);\r\n  const [members,setMembers]=useState(0);\r\n\r\n  useEffect(()=>{\r\n      let mount=true;\r\n      let account=localStorage.getItem('account');\r\n        if(localStorage.getItem('account')){\r\n            account=JSON.parse(localStorage.getItem('account'));\r\n        }\r\n        else{\r\n            account=false;\r\n        }\r\n      const displayStats=() =>{\r\n          axios({\r\n              method:'GET',\r\n              url:process.env.REACT_APP_BACKEND_URL_LARAVEL+'userallstats/'+account['id'],\r\n              headers:{\r\n                  'content-type':'application/json'\r\n              }\r\n          })\r\n          .then(result =>{\r\n              if(mount){\r\n                  if(result.data.success){\r\n                      setStats(result.data.response);\r\n                      setTrials(result.data.response[0].trials);\r\n                      setFamillies(result.data.response[0].families);\r\n                      setProjects(result.data.response[0].projects);\r\n                      setProperties(result.data.response[0].properties);\r\n                      setMembers(result.data.response[0].members);\r\n                  }\r\n                  else{\r\n                      setStats([]);\r\n                  }\r\n              }\r\n          })\r\n          .catch(err=>{\r\n              setStats([]);\r\n          })\r\n      }\r\n      displayStats();\r\n\r\n      return () =>{\r\n          mount=false;\r\n      }\r\n\r\n  },[stats])\r\n    \r\n    const series=[trials, members, families, properties, projects];\r\n    \r\n\r\n    const options={\r\n        chart: {\r\n            id: \"yearly-bar\",\r\n            height: 250,\r\n            width: '100%',\r\n          },\r\n          labels: ['Trials', 'Members', 'Families', 'Properties', 'Projects'],\r\n          theme:{\r\n            monochrome:{\r\n                enabled:true\r\n            }\r\n          },\r\n          plotOptions:{\r\n            pie:{\r\n                dataLabels:{\r\n                    offset:-5\r\n                }\r\n            }\r\n          },\r\n          dataLabels:{\r\n            formatter(val, opts){\r\n                const name=opts.w.globals.labels[opts.seriesIndex]\r\n                return [name, val.toFixed(1)+'%']\r\n            }\r\n            \r\n          },\r\n          stroke:{\r\n            curve: 'straight'\r\n          },\r\n          title:{\r\n            text: 'Summary Stats',\r\n            align: 'center'\r\n          }\r\n    };\r\n\r\n  return (\r\n    <div className=\"\">\r\n        <ApexReactCharts \r\n            options={options} \r\n            series={series}\r\n            type=\"pie\"\r\n            height={250} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserStatsAllChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,eAAe,MAAM,kBAAkB;AAAA;AAE9C,SAASC,iBAAiB,GAAG;EAAA;EAC3B,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACN,QAAQ,CAAC,EAAE,CAAC;EACnC,MAAM,CAACO,QAAQ,EAACC,YAAY,CAAC,GAACR,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACS,MAAM,EAACC,SAAS,CAAC,GAACV,QAAQ,CAAC,CAAC,CAAC;EACpC,MAAM,CAACW,UAAU,EAACC,aAAa,CAAC,GAACZ,QAAQ,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACa,QAAQ,EAACC,WAAW,CAAC,GAACd,QAAQ,CAAC,CAAC,CAAC;EACxC,MAAM,CAACe,OAAO,EAACC,UAAU,CAAC,GAAChB,QAAQ,CAAC,CAAC,CAAC;EAEtCC,SAAS,CAAC,MAAI;IACV,IAAIgB,KAAK,GAAC,IAAI;IACd,IAAIC,OAAO,GAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IACzC,IAAGD,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,EAAC;MAC/BF,OAAO,GAACG,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC;IACvD,CAAC,MACG;MACAF,OAAO,GAAC,KAAK;IACjB;IACF,MAAMK,YAAY,GAAC,MAAK;MACpBrB,KAAK,CAAC;QACFsB,MAAM,EAAC,KAAK;QACZC,GAAG,EAACC,OAAO,CAACC,GAAG,CAACC,6BAA6B,GAAC,eAAe,GAACV,OAAO,CAAC,IAAI,CAAC;QAC3EW,OAAO,EAAC;UACJ,cAAc,EAAC;QACnB;MACJ,CAAC,CAAC,CACDC,IAAI,CAACC,MAAM,IAAG;QACX,IAAGd,KAAK,EAAC;UACL,IAAGc,MAAM,CAACC,IAAI,CAACC,OAAO,EAAC;YACnB3B,QAAQ,CAACyB,MAAM,CAACC,IAAI,CAACE,QAAQ,CAAC;YAC9BxB,SAAS,CAACqB,MAAM,CAACC,IAAI,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACzB,MAAM,CAAC;YACzCD,YAAY,CAACuB,MAAM,CAACC,IAAI,CAACE,QAAQ,CAAC,CAAC,CAAC,CAAC3B,QAAQ,CAAC;YAC9CO,WAAW,CAACiB,MAAM,CAACC,IAAI,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACrB,QAAQ,CAAC;YAC7CD,aAAa,CAACmB,MAAM,CAACC,IAAI,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACvB,UAAU,CAAC;YACjDK,UAAU,CAACe,MAAM,CAACC,IAAI,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACnB,OAAO,CAAC;UAC/C,CAAC,MACG;YACAT,QAAQ,CAAC,EAAE,CAAC;UAChB;QACJ;MACJ,CAAC,CAAC,CACD6B,KAAK,CAACC,GAAG,IAAE;QACR9B,QAAQ,CAAC,EAAE,CAAC;MAChB,CAAC,CAAC;IACN,CAAC;IACDiB,YAAY,EAAE;IAEd,OAAO,MAAK;MACRN,KAAK,GAAC,KAAK;IACf,CAAC;EAEL,CAAC,EAAC,CAACZ,KAAK,CAAC,CAAC;EAER,MAAMgC,MAAM,GAAC,CAAC5B,MAAM,EAAEM,OAAO,EAAER,QAAQ,EAAEI,UAAU,EAAEE,QAAQ,CAAC;EAG9D,MAAMyB,OAAO,GAAC;IACVC,KAAK,EAAE;MACHC,EAAE,EAAE,YAAY;MAChBC,MAAM,EAAE,GAAG;MACXC,KAAK,EAAE;IACT,CAAC;IACDC,MAAM,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,YAAY,EAAE,UAAU,CAAC;IACnEC,KAAK,EAAC;MACJC,UAAU,EAAC;QACPC,OAAO,EAAC;MACZ;IACF,CAAC;IACDC,WAAW,EAAC;MACVC,GAAG,EAAC;QACAC,UAAU,EAAC;UACPC,MAAM,EAAC,CAAC;QACZ;MACJ;IACF,CAAC;IACDD,UAAU,EAAC;MACTE,SAAS,CAACC,GAAG,EAAEC,IAAI,EAAC;QAChB,MAAMC,IAAI,GAACD,IAAI,CAACE,CAAC,CAACC,OAAO,CAACb,MAAM,CAACU,IAAI,CAACI,WAAW,CAAC;QAClD,OAAO,CAACH,IAAI,EAAEF,GAAG,CAACM,OAAO,CAAC,CAAC,CAAC,GAAC,GAAG,CAAC;MACrC;IAEF,CAAC;IACDC,MAAM,EAAC;MACLC,KAAK,EAAE;IACT,CAAC;IACDC,KAAK,EAAC;MACJC,IAAI,EAAE,eAAe;MACrBC,KAAK,EAAE;IACT;EACN,CAAC;EAEH,oBACE;IAAK,SAAS,EAAC,EAAE;IAAA,uBACb,QAAC,eAAe;MACZ,OAAO,EAAEzB,OAAQ;MACjB,MAAM,EAAED,MAAO;MACf,IAAI,EAAC,KAAK;MACV,MAAM,EAAE;IAAI;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QACjB;AAEV;AAAC,GAnGQjC,iBAAiB;AAAA,KAAjBA,iBAAiB;AAqG1B,eAAeA,iBAAiB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}